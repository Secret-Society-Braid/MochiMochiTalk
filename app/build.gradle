/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.github.johnrengelman.shadow' version '7.1.2'

    // test coverages
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // Java Discord API
    // https://mvnrepository.com/artifact/net.dv8tion/JDA
    implementation group: 'net.dv8tion', name: 'JDA', version: '5.0.0-beta.7'


    // logback
    implementation('ch.qos.logback:logback-classic:1.4.6')

    // implementation 'com.google.cloud:google-cloud-speech:2.2.2'
    // implementation 'com.google.cloud:google-cloud-texttospeech:2.1.1'
    // implementation 'com.github.wdavies973:VocalCord:2.3'

    // https://mvnrepository.com/artifact/com.google.api-client/google-api-client
    implementation group: 'com.google.api-client', name: 'google-api-client', version: '2.2.0'

// https://mvnrepository.com/artifact/com.google.cloud/google-cloud-texttospeech
    implementation group: 'com.google.cloud', name: 'google-cloud-texttospeech', version: '2.13.0'

// https://mvnrepository.com/artifact/com.google.auth/google-auth-library-oauth2-http
    implementation group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '1.16.0'

// google drive api
    implementation group: 'com.google.apis', name: 'google-api-services-drive', version: 'v3-rev20230212-2.0.0'

// libraries for regex matching
    implementation group: 'com.google.re2j', name: 're2j', version: '1.7'


    // jackson core, databind, annotation
    implementation('com.fasterxml.jackson.core:jackson-core:2.14.2')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.14.2')
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.14.2')

    // HajimeAPI wrapper
    implementation(fileTree(dir: '..\\native', include: ['hajimeapi4j.jar']))

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
}

application {
    // Define the main class for the application.
    getMainClass().set("MochiMochiTalk.App")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8';
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
